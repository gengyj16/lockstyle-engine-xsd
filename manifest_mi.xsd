<?xml version="1.0" encoding="UTF-8"?>

<!-- Update log
    2024.05.06 init: first version support for MAML, may contain unnecessary attrs,
    2024.05.07 mod: allow for only 1 <VariableBinders/> tag,
    2024.05.07 add: srcType rate haptic MusicControl Item useVariableUpdater interceptTouch ...
    2024.05.09 add: numPara strPara tolerance alwaysShow Icon tint
    2024.05.15 add: DateTime-fontFamily
 -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="qualified">
    <xs:element name="Lockscreen">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="rootTags" maxOccurs="unbounded" minOccurs="0" />
                <xs:element ref="VariableBinders" maxOccurs="1" minOccurs="0" />
                <xs:group ref="rootTags" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="frameRate" default="60" />
            <xs:attribute name="screenWidth" type="numType" />
            <xs:attribute name="screenHeight" type="numType" />
            <xs:attribute name="vibrate" type="booleanType" />
            <xs:attribute name="version" type="numType" />
            <xs:attribute name="pressure" type="booleanType" />
            <xs:attribute name="displayDesktop" type="booleanType" />
            <xs:attribute name="useVariableUpdater" type="stringType" />
            <xs:attribute name="disableCutRoundCorner" type="booleanType" />
            <xs:attribute name="useHardwareCanvas" type="booleanType" />
            <xs:attribute name="cornerCutType" type="stringType" />
            <xs:attribute name="width" type="numType" />
            <xs:attribute name="height" type="numType" />
            <xs:attribute name="resDensity" type="numType" />
            <xs:attribute name="compiler" type="booleanType" />
        </xs:complexType>
    </xs:element>
    <xs:element name="Root" substitutionGroup="Lockscreen" />
    <xs:element name="Widget" substitutionGroup="Lockscreen" />
    <xs:element name="Icon" substitutionGroup="Lockscreen" />
    <xs:element name="CommonWallpaper" substitutionGroup="Lockscreen" />
    <xs:element name="BinderList" substitutionGroup="VariableBinders" />
    <xs:element name="AttrDataBinder" substitutionGroup="Variable" />
    <xs:element name="BroadcastBinder" substitutionGroup="ContentProviderBinder" />
    <xs:element name="Consequent" substitutionGroup="Trigger" />
    <xs:element name="Alternate" substitutionGroup="Trigger" />
    <xs:group name="rootTags">
        <xs:choice>
            <xs:element ref="Wallpaper" />
            <xs:element ref="ExternalCommands" />
            <xs:element ref="Var" />
            <xs:element ref="VarArray" />
            <xs:element ref="Group" />
            <xs:element ref="Frame" />
            <xs:element ref="Image" />
            <xs:element ref="ImageNumber" />
            <xs:element ref="ImageChars" />
            <xs:element ref="Time" />
            <xs:element ref="DateTime" />
            <xs:element ref="Slider" />
            <xs:element ref="Button" />
            <xs:element ref="Unlocker" />
            <xs:element ref="MusicControl" />
            <xs:element ref="Video" />
            <xs:element ref="VirtualScreen" />
            <xs:element ref="Rectangle" />
            <xs:element ref="Circle" />
            <xs:element ref="Ellipse" />
            <xs:element ref="Line" />
            <xs:element ref="Arc" />
            <xs:element ref="Array" />
            <xs:element ref="Text" />
            <xs:element ref="MediaControl" />
            <xs:element ref="FramerateController" />
        </xs:choice>
    </xs:group>
    <!-- 圆形shape -->
    <xs:element name="CircleShape">
        <xs:complexType>
            <xs:attributeGroup ref="shapeCom" />
            <xs:attribute name="radius" type="expression" />
        </xs:complexType>
    </xs:element>

    <!-- 方形的shape -->
    <xs:element name="PolygonShape">
        <xs:complexType>
            <xs:attributeGroup ref="shapeCom" />
            <xs:attribute name="hx" type="expression" />
            <xs:attribute name="hy" type="expression" />
            <xs:attribute name="angle" type="expression" />
        </xs:complexType>
    </xs:element>

    <!-- shape的公用属性 -->
    <xs:attributeGroup name="shapeCom">
        <xs:attribute name="type" type="stringType" />
        <xs:attribute name="xPosition" type="expression" />
        <xs:attribute name="yPosition" type="expression" />
    </xs:attributeGroup>

    <xs:element name="Slice">
        <xs:complexType>
            <xs:attribute name="time" type="stringType" />
            <xs:attribute name="duration" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="intensity" type="stringType" />
            <xs:attribute name="sharpness" type="stringType" />
        </xs:complexType>
    </xs:element>

    <xs:element name="Vibrate">
        <xs:complexType>
            <xs:attribute name="loop" type="stringType" />
        </xs:complexType>
    </xs:element>
    <xs:element name="VibrateCommand">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Vibrate" />
            </xs:choice>
            <xs:attribute name="id" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="define" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
        </xs:complexType>
    </xs:element>

    <xs:element name="Layer">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Source" />
            </xs:choice>
            <xs:attribute name="width" type="expression" />
            <xs:attribute name="w" type="expression" />
            <xs:attribute name="height" type="expression" />
            <xs:attribute name="h" type="expression" />
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="z" type="expression" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="staticCondition" type="stringType" />
            <xs:attribute name="delay" type="stringType" />
            <xs:attribute name="repeat" type="stringType" />
        </xs:complexType>
    </xs:element>
    <xs:element name="Source">
        <xs:complexType>
            <xs:attribute name="frame" type="stringType" />
            <xs:attribute name="time" type="xs:long" />
        </xs:complexType>
    </xs:element>

    <!-- LayerInfo -->
    <xs:element name="LayerInfo">
        <xs:complexType>
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="w" type="expression" />
            <xs:attribute name="h" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 几何图形 -->
    <xs:element name="Geometry">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Rectangle" />
                <xs:element ref="Circle" />
                <xs:element ref="Ellipse" />
                <xs:element ref="Line" />
                <xs:element ref="Arc" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!-- 音乐组件标签解析 -->
    <xs:element name="MusicControl">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="viewGroup" />
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="visibility" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 文本 -->
    <xs:element name="Text" type="textType" />
    <xs:element name="PathItem">
        <xs:complexType>
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="controlX" type="expression" />
            <xs:attribute name="controlY" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 图片 -->
    <xs:element name="Image" type="imageType" />
    <!-- 数字图片 -->
    <xs:element name="ImageNumber">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="number" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 用于帧动画的组件 -->
    <xs:element name="SourceImage">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="sourceName" type="stringType" />
            <xs:attribute name="format" type="stringType" />
            <xs:attribute name="from" type="expression" />
            <xs:attribute name="to" type="expression" />
            <xs:attribute name="loop" type="booleanType" />
            <xs:attribute name="space" type="xs:long" />
            <xs:attribute name="direction" type="numType" />
            <xs:attribute name="unlockTo" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 视频元素 -->
    <xs:element name="Video">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="x" default="0" type="expression" />
            <xs:attribute name="y" default="0" type="expression" />
            <xs:attribute name="w" default="0" type="expression" />
            <xs:attribute name="h" default="0" type="expression" />
            <xs:attribute name="width" default="0" type="expression" />
            <xs:attribute name="height" default="0" type="expression" />
            <xs:attribute name="play" default="true" type="booleanType" />
            <xs:attribute name="looping" default="false" type="booleanType" />
            <xs:attribute name="count" type="expression" />
            <xs:attribute name="sound" default="0" type="numType" />
            <xs:attribute name="living" default="false" type="booleanType" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="scaleType" default="fill" />
            <xs:attribute name="visibility" type="expression" />
            <xs:attribute name="defaultBitmap" type="stringType" />
            <xs:attribute name="defaultBigBitmap" type="stringType" />
            <xs:attribute name="defaultBitmapMusic" type="stringType" />
            <xs:attribute name="isMusic" type="stringType" />
            <xs:attribute name="isBackground" type="stringType" />
            <xs:attribute name="turn" type="stringType" />
            <xs:attribute name="fold_expand_start" type="numType" />
            <xs:attribute name="fold_expand_end" type="numType" />
            <xs:attribute name="fold_collapse_big_start" type="numType" />
            <xs:attribute name="fold_collapse_big_end" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 时间元素，自动使用时间数值图片和时间分隔符图片，组成时间元素 -->
    <xs:element name="Time">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="space" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 日期元素 -->
    <xs:element name="DateTime">
        <xs:complexType>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="color" type="colorType" />
            <xs:attribute name="size" type="expression" />
            <xs:attribute name="format" type="stringType" />
            <xs:attribute name="fontFamily" type="stringType" />
        </xs:complexType>
    </xs:element>

    <!-- 壁纸元素 -->
    <xs:element name="Wallpaper" type="imageType" />
    <!-- 文本图片 -->
    <xs:element name="ImageChars">
        <xs:complexType>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="src" type="expression" />
            <xs:attribute name="string" type="expression" />
            <xs:attribute name="number" type="expression" />
            <xs:attribute name="charNameMap" type="stringType" />
            <xs:attribute name="space" type="expression" />
        </xs:complexType>
    </xs:element>

    <!-- 矩形 -->
    <xs:element name="Rectangle">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="geometryGroup" />
            <xs:attribute name="cornerRadius" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 圆形 -->
    <xs:element name="Circle">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="geometryGroup" />
            <xs:attribute name="r" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 椭圆 -->
    <xs:element name="Ellipse">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="geometryGroup" />
        </xs:complexType>
    </xs:element>
    <!-- 直线 -->
    <xs:element name="Line">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="geometryGroup" />
            <xs:attribute name="x1" type="expression" />
            <xs:attribute name="y1" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 扇形 -->
    <xs:element name="Arc">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="geometryGroup" />
            <xs:attribute name="startAngle" type="expression" />
            <xs:attribute name="sweepAngle" type="expression" />
            <xs:attribute name="closure" type="booleanType" />
        </xs:complexType>
    </xs:element>
    <!-- 填充渐变 -->
    <xs:element name="FillGradient" type="shadeType" />
    <!-- 描边渐变 -->
    <xs:element name="StrokeGradient" type="shadeType" />
    <!-- 渐变type -->
    <xs:complexType name="shadeType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="Linear" />
            <xs:element ref="Radial" />
            <xs:element ref="Sweep" />
        </xs:choice>
    </xs:complexType>
    <!-- 线性渐变的效果：渐变颜色沿渐变轴（x,y,x1,y1）呈线性渐变 -->
    <xs:element name="Linear">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="GradientPoint" />
            </xs:sequence>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="x1" type="expression" />
            <xs:attribute name="y1" type="expression" />
            <xs:attribute name="tileMode" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 放射渐变：渐变颜色以设置的渐变中心点为圆心，根据半径r呈环形渐变 -->
    <xs:element name="Radial">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="GradientPoint" />
            </xs:sequence>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="r" type="expression" />
            <xs:attribute name="tileMode" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 扫描渐变：渐变颜色以设置的中心点为圆心，呈类似雷达扫描的渐变 -->
    <xs:element name="Sweep">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="GradientPoint" />
            </xs:sequence>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 渐变子标签:用于设置渐变颜色和渐变位置 -->
    <xs:element name="GradientPoint">
        <xs:complexType>
            <xs:attribute name="color" type="colorType" />
            <xs:attribute name="position" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 组元素组件，可以把图片、按钮、文字、时间等元素包含在组中，同时控制显示隐藏，设置动画等 -->
    <xs:element name="Group">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="viewGroup" />
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="x" default="0" type="expression" />
            <xs:attribute name="y" default="0" type="expression" />
            <xs:attribute name="w" default="0" type="expression" />
            <xs:attribute name="h" default="0" type="expression" />
            <xs:attribute name="width" default="0" type="expression" />
            <xs:attribute name="height" default="0" type="expression" />
            <xs:attribute name="rotation" default="0" type="expression" />
            <xs:attribute name="rotationX" default="0" type="expression" />
            <xs:attribute name="rotationY" default="0" type="expression" />
            <xs:attribute name="angle" default="0" type="expression" />
            <xs:attribute name="angleX" default="0" type="expression" />
            <xs:attribute name="angleY" default="0" type="expression" />
            <xs:attribute name="alpha" default="255" type="expression" />
            <xs:attribute name="active" default="1" type="expression" />
            <xs:attribute name="visibility" default="1" type="expression" />
            <xs:attribute name="layered" type="expression" />
            <xs:attribute name="clip" type="booleanType" />
            <xs:attribute name="align" type="stringType" />
            <xs:attribute name="alignV" type="stringType" />
            <xs:attribute name="pivotX" default="0" type="expression" />
            <xs:attribute name="pivotY" default="0" type="expression" />
            <xs:attribute name="scale" default="1" type="expression" />
            <xs:attribute name="scaleX" default="1" type="expression" />
            <xs:attribute name="scaleY" default="1" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 虚拟屏幕，用于做翻书，百叶窗之类的效果 -->
    <xs:element name="VirtualScreen">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="virtualGroup" />
            <xs:attribute name="name" type="stringType" />
        </xs:complexType>
    </xs:element>

    <!-- Item -->
    <xs:element name="Item">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Angle" />
                <xs:element name="Position">
                    <xs:complexType>
                        <xs:attribute name="x" type="numType" />
                        <xs:attribute name="y" type="numType" />
                        <xs:attribute name="isRandom" type="booleanType" />
                    </xs:complexType>
                </xs:element>
                <xs:element name="AngleVelocity">
                    <xs:complexType>
                        <xs:attribute name="angleVelocity" type="xs:float" />
                        <xs:attribute name="lowestAngleVelocity" type="xs:float" />
                        <xs:attribute name="isRandom" type="booleanType" />
                    </xs:complexType>
                </xs:element>
                <xs:element name="Weight">
                    <xs:complexType>
                        <xs:attribute name="value" type="xs:float" />
                        <xs:attribute name="lowestWeight" type="xs:float" />
                        <xs:attribute name="isRandom" type="booleanType" />
                    </xs:complexType>
                </xs:element>
                <!-- <xs:element ref="Trigger" /> -->
                <xs:group maxOccurs="unbounded" minOccurs="0" ref="viewGroup" />
            </xs:choice>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="number" type="numType" />
            <xs:attribute name="initSpeedX" type="expression" />
            <xs:attribute name="initSpeedY" type="expression" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="value" type="expression" />
            <xs:attribute name="time" type="numType" />
            <xs:attribute name="easeType" type="easeAttr" />
        </xs:complexType>
    </xs:element>

    <xs:element name="Angle">
        <xs:complexType>
            <xs:attribute name="isRandom" type="booleanType" />
            <xs:attribute name="angle" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 按钮 -->
    <xs:element name="Button" type="buttonType" />
    <xs:element name="SupportPictorialButton" type="buttonType" />
    <!-- Normal状态 -->
    <xs:element name="Normal" type="stateType" />
    <!-- Pressed状态 -->
    <xs:element name="Pressed" type="stateType" />
    <!-- NormalState状态 -->
    <xs:element name="NormalState" type="stateType" />
    <!-- PressedState状态 -->
    <xs:element name="PressedState" type="stateType" />
    <!-- ReachedState状态 -->
    <xs:element name="ReachedState" type="stateType" />
    <!-- 滑动组件 -->
    <xs:element name="Slider">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="StartPoint" />
                <xs:element ref="EndPoint" />
            </xs:choice>
            <xs:attributeGroup ref="sliderAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- StartPoint -->
    <xs:element name="StartPoint" type="pointType" />
    <!-- EndPoint -->
    <xs:element name="EndPoint" type="pointType" />
    <!-- 滑动组件中的标签，用于限制滑块的滑动距离 -->
    <xs:element name="Path">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Position" />
            </xs:sequence>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="tolerance" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 滑动的点 -->
    <xs:element name="Position">
        <xs:complexType>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- Intent -->
    <xs:element name="Intent">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="selectIntent" type="stringType" />
            <xs:attribute name="action" type="stringType" />
            <xs:attribute name="uri" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="category" type="stringType" />
            <xs:attribute name="package" type="stringType" />
            <xs:attribute name="class" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 解锁 -->
    <xs:element name="Unlocker">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="StartPoint" />
                <xs:element ref="EndPoint" />
            </xs:choice>
            <xs:attributeGroup ref="sliderAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- 变量：用来保存某些数值，可用于控制其他元素的显示隐藏，也可以用于控制变量动画 -->
    <xs:element name="Var">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="VariableAnimation" />
                <xs:element ref="Trigger" />
                <xs:element ref="Triggers" />
            </xs:choice>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="index" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="threshold" type="numType" />
            <xs:attribute name="size" type="stringType" />
            <xs:attribute name="expression" type="stringType" />
            <xs:attribute name="const" type="booleanType" />
            <xs:attribute name="persist" type="booleanType" />
            <xs:attribute name="values" type="stringType" />
            <xs:attribute name="globalPersist" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- Extra -->
    <xs:element name="Extra">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="expression" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 变量数组元素 -->
    <xs:element name="VarArray">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Vars" />
                <xs:element ref="Items" />
            </xs:choice>
            <xs:attribute name="type" default="number" />
        </xs:complexType>
    </xs:element>
    <!-- Vars -->
    <xs:element name="Vars">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Var" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- Items -->
    <xs:element name="Items">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Item" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- 元素数组 -->
    <xs:element name="Array">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Image" />
                <xs:element ref="Text" />
            </xs:choice>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="count" type="expression" />
            <xs:attribute name="indexName" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- VortexView -->
    <xs:element name="VortexView">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:group ref="animationGroup" />
                <xs:element ref="Trigger" />
                <xs:element ref="Triggers" />
            </xs:choice>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="blur" type="numType" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="xfermode" type="stringType" />
            <xs:attribute name="srcExp" type="expression" />
            <xs:attribute name="controlMode" type="expression" />
            <xs:attribute name="srcid" type="numType" />
            <xs:attribute name="useVirtualScreen" type="booleanType" />
            <xs:attribute name="meshx" default="100" type="numType" />
            <xs:attribute name="meshy" default="100" type="numType" />
            <xs:attribute name="speedOfDistance" default="100" type="numType" />
            <xs:attribute name="delayTime" default="100" type="numType" />
            <xs:attribute name="speedOfAngel" default="100" type="numType" />
        </xs:complexType>
    </xs:element>
    <xs:element name="RotateView" substitutionGroup="VortexView" />
    <!-- 蒙板控件，需要与图片元素一起使用 -->
    <xs:element name="Mask">
        <xs:complexType>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="hybridMode" type="stringType" />
            <xs:attribute name="absolute" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 笔刷功能类，与Image组合使用,可实现刮刮乐、搽玻璃等效果 -->
    <xs:element name="Paint">
        <xs:complexType>
            <xs:attribute name="weight" type="expression" />
            <xs:attribute name="clear_percent" type="expression" />
            <xs:attribute name="color" type="colorType" />
        </xs:complexType>
    </xs:element>
    <!-- 位移动画 -->
    <xs:element name="PositionAnimation">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element name="Position">
                    <xs:complexType>
                        <xs:attribute name="x" type="numType" />
                        <xs:attribute name="y" type="numType" />
                        <xs:attribute name="time" type="xs:long" />
                        <xs:attribute name="easeType" type="easeAttr" />
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:attribute name="repeat" type="numType" />
            <xs:attribute name="delay" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 透明度动画 -->
    <xs:element name="AlphaAnimation">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Alpha" maxOccurs="unbounded" minOccurs="0">
                    <xs:complexType>
                        <xs:attribute name="a" type="numType" />
                        <xs:attribute name="time" type="xs:long" />
                        <xs:attribute name="easeType" type="easeAttr" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="delay" type="numType" />
            <xs:attribute name="repeat" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 缩放动画 -->
    <xs:element name="SizeAnimation">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Size" maxOccurs="unbounded" minOccurs="0">
                    <xs:complexType>
                        <xs:attribute name="w" type="numType" />
                        <xs:attribute name="h" type="numType" />
                        <xs:attribute name="time" type="xs:long" />
                        <xs:attribute name="easeType" type="easeAttr" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="delay" type="numType" />
            <xs:attribute name="repeat" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 旋转动画 -->
    <xs:element name="RotationAnimation">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element name="Rotation" type="rotationType" />
                <xs:element name="RotationX" type="rotationType" />
                <xs:element name="RotationY" type="rotationType" />
            </xs:choice>
            <xs:attribute name="delay" type="numType" />
            <xs:attribute name="repeat" type="numType" />
            <xs:attribute name="angle" type="numType" />
            <xs:attribute name="time" type="xs:long" />
            <xs:attribute name="easeType" type="easeAttr" />
        </xs:complexType>
    </xs:element>
    <!-- 帧动画 -->
    <xs:element name="SourcesAnimation">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Source" maxOccurs="unbounded" minOccurs="0">
                    <xs:complexType>
                        <xs:attribute name="x" type="numType" />
                        <xs:attribute name="y" type="numType" />
                        <xs:attribute name="src" type="stringType" use="required" />
                        <xs:attribute name="time" type="xs:long" />
                        <xs:attribute name="easeType" type="easeAttr" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="delay" type="numType" />
            <xs:attribute name="repeat" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 变量动画:基础命令，让一个变量在规定时间内变化动画 -->
    <xs:element name="VariableAnimation">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="AniFrame" />
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Item" />
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Triggers" />
            </xs:sequence>
            <xs:attribute name="delay" type="numType" />
            <xs:attribute name="loop" type="booleanType" />
            <xs:attribute name="initPause" type="booleanType" />
            <xs:attribute name="easeType" type="easeAttr" />
        </xs:complexType>
    </xs:element>
    <!-- AniFrame -->
    <xs:element name="AniFrame">
        <xs:complexType>
            <xs:attribute name="time" type="expression" />
            <xs:attribute name="value" type="expression" />
            <xs:attribute name="easeType" type="easeAttr" />
        </xs:complexType>
    </xs:element>
    <!-- 传感器 -->
    <xs:element name="VariableBinders">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="ContentProviderBinder" />
                <xs:element ref="SensorBinder" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!-- 通知 -->
    <xs:element name="AttrDataBinders">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="AttrDataBinder" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!-- 数据查询组件 -->
    <xs:element name="ContentProviderBinder">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Variable" />
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="List" />
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Trigger" />
            </xs:sequence>
            <xs:attribute name="uri" type="stringType" />
            <xs:attribute name="uriFormat" type="stringType" />
            <xs:attribute name="uriParas" type="stringType" />
            <xs:attribute name="columns" type="stringType" />
            <xs:attribute name="where" type="stringType" />
            <xs:attribute name="args" type="stringType" />
            <xs:attribute name="order" type="stringType" />
            <xs:attribute name="countName" type="stringType" />
            <xs:anyAttribute processContents="lax" />
        </xs:complexType>
    </xs:element>
    <!-- 传感器数据绑定组件 -->
    <xs:element name="SensorBinder">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Variable" />
            </xs:sequence>
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="rate" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- Variable -->
    <xs:element name="Variable">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="column" type="stringType" />
            <xs:anyAttribute processContents="lax" />
        </xs:complexType>
    </xs:element>
    <!-- List -->
    <xs:element name="List">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" ref="Item" />
                <xs:element maxOccurs="1" minOccurs="0" ref="AttrDataBinders" />
            </xs:sequence>
            <xs:attribute name="name" type="stringType" />
            <xs:anyAttribute processContents="lax" />
        </xs:complexType>
    </xs:element>
    <!-- 高级动态帧率 -->
    <xs:element name="FramerateController">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="ControlPoint" />
            </xs:sequence>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="initPause" type="booleanType" />
            <xs:attribute name="loop" type="booleanType" />
        </xs:complexType>
    </xs:element>
    <!-- The type Control point -->
    <xs:element name="ControlPoint">
        <xs:complexType>
            <xs:attribute name="time" type="stringType" />
            <xs:attribute name="frameRate" type="stringType" />
        </xs:complexType>
    </xs:element>

    <!-- Range包含一个小方形的坐标数据 -->
    <xs:element name="Range">
        <xs:complexType>
            <xs:attribute name="rect" type="stringType" />
        </xs:complexType>
    </xs:element>

    <!-- 网格化功能 -->
    <xs:element name="MeshImage">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Translation" />
                <xs:element ref="Alpha" />
                <xs:element ref="Scale" />
                <xs:element ref="Rotate" />
                <xs:element ref="SinMotion" />
            </xs:choice>
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="mesh" type="stringType" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="center_point" type="expression" />
            <xs:attribute name="sensor" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 位移 -->
    <xs:element name="Translation">
        <xs:complexType>
            <xs:attribute name="duration" type="expression" />
            <xs:attribute name="repeat" type="expression" />
            <xs:attribute name="delay" type="expression" />
            <xs:attribute name="factor" type="expression" />
            <xs:attribute name="values" type="stringType" />
            <xs:attribute name="max_distance_x" type="expression" />
            <xs:attribute name="max_distance_y" type="expression" />
            <xs:attribute name="no_move_distance_x" type="expression" />
            <xs:attribute name="no_move_distance_y" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 透明度 -->
    <xs:element name="Alpha">
        <xs:complexType>
            <xs:attribute name="duration" type="expression" />
            <xs:attribute name="repeat" type="expression" />
            <xs:attribute name="delay" type="expression" />
            <xs:attribute name="values" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 缩放 -->
    <xs:element name="Scale">
        <xs:complexType>
            <xs:attribute name="duration" type="expression" />
            <xs:attribute name="repeat" type="expression" />
            <xs:attribute name="delay" type="expression" />
            <xs:attribute name="values" type="stringType" />
            <xs:attribute name="no_move_distance_x" type="expression" />
            <xs:attribute name="no_move_distance_y" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 旋转 -->
    <xs:element name="Rotate">
        <xs:complexType>
            <xs:attribute name="duration" type="expression" />
            <xs:attribute name="repeat" type="expression" />
            <xs:attribute name="delay" type="expression" />
            <xs:attribute name="values" type="stringType" />
            <xs:attribute name="no_move_distance_x" type="expression" />
            <xs:attribute name="no_move_distance_y" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 水波荡漾 -->
    <xs:element name="SinMotion">
        <xs:complexType>
            <xs:attribute name="a" type="expression" />
            <xs:attribute name="factor_k" type="expression" />
            <xs:attribute name="no_move_distance_x" type="expression" />
            <xs:attribute name="no_move_distance_y" type="expression" />
        </xs:complexType>
    </xs:element>

    <!-- ItemGroup -->
    <xs:element name="ItemGroup">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Item" />
                <xs:element name="Alpha">
                    <xs:complexType>
                        <xs:attribute name="value" type="expression" />
                        <xs:attribute name="x" type="expression" />
                        <xs:attribute name="y" type="expression" />
                        <xs:attribute name="width" type="expression" />
                        <xs:attribute name="height" type="expression" />
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:attribute name="x" type="expression" />
            <xs:attribute name="y" type="expression" />
            <xs:attribute name="width" type="expression" />
            <xs:attribute name="height" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 外部View容器窗口组件 -->
    <xs:element name="Frame">
        <xs:complexType>
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
            <xs:attributeGroup ref="viewCom" />
            <xs:attribute name="bg" type="stringType" />
            <xs:attribute name="resource" type="stringType" />
            <xs:attribute name="needscale" type="numType" />
            <xs:attribute name="adurl" type="stringType" />
            <xs:attribute name="adresourcename" type="stringType" />
            <xs:attribute name="onlylocal" type="booleanType" />
            <xs:attribute name="showadcount" type="numType" />
        </xs:complexType>
    </xs:element>

    <!-- Triggers -->
    <xs:element name="Triggers">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Trigger" />
                <xs:element ref="Normal" />
                <xs:element ref="Pressed" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!-- 命令的事件触发器 -->
    <xs:element name="Trigger">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element ref="Command" />
                <xs:element ref="VariableCommand" />
                <xs:element ref="SoundCommand" />
                <xs:element ref="ExternCommand" />
                <xs:element ref="IntentCommand" />
                <xs:element ref="VideoCommand" />
                <xs:element ref="CycleCommand" />
                <xs:element ref="GroupCommands" />
                <xs:element ref="VibrateCommand" />
                <xs:element ref="MediaCommand" />
                <xs:element ref="AnimationCommand" />
                <xs:element ref="BinderCommand" />
                <xs:element ref="IfCommand" />
            </xs:choice>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="action" type="stringType" />
            <xs:attribute name="condition" type="expression" />
            <xs:attribute name="target" type="stringType" />
            <xs:attribute name="property" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="value" type="stringType" />
            <xs:attribute name="isDisableUnlock" type="xs:boolean" />
            <xs:attribute name="cancelEngineUnlock" type="xs:boolean" />
        </xs:complexType>
    </xs:element>
    <!-- 基础命令 -->
    <xs:element name="Command">
        <xs:complexType>
            <xs:attribute name="target" type="stringType" />
            <xs:attribute name="value" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attributeGroup ref="commandAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- 条件命令 -->
    <xs:element name="IfCommand">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Consequent" />
                <xs:element name="Alternate" />

            </xs:sequence>
            <xs:attribute name="ifCondition" type="expression" />
        </xs:complexType>
    </xs:element>

    <!-- 动画命令 -->
    <xs:element name="AnimationCommand">
        <xs:complexType>
            <xs:attribute name="target" type="stringType" />
            <xs:attribute name="command" type="stringType" />
            <xs:attributeGroup ref="commandAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- Binder命令 -->
    <xs:element name="BinderCommand">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="command" type="stringType" />
            <xs:attributeGroup ref="commandAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- 声音命令 -->
    <xs:element name="SoundCommand">
        <xs:complexType>
            <xs:attribute name="sound" type="stringType" />
            <xs:attribute name="volume" type="numType" />
            <xs:attribute name="loop" type="expression" />
            <xs:attribute name="keepCur" type="booleanType" />
            <xs:attribute name="delay" type="expression" />
            <xs:attribute name="delayCondition" type="expression" />
            <xs:attribute name="condition" type="expression" />
            <xs:attribute name="adid" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 变量命令。用来控制变量（Var）的值。包括name和expression两个特殊属性 -->
    <xs:element name="VariableCommand">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="expression" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="index" type="expression" />
            <xs:attributeGroup ref="commandAttrs" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="persist" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 通用命令。是用来接收外部命令的命令，典型的用法：在锁屏中，通常用来接收开屏/关屏命令，从而执行一些命令；在桌面插件中，用来检测切屏从而执行命令 -->
    <xs:element name="ExternalCommands">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Trigger" />
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Triggers" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!-- 通用命令。用来向外部程序发送命令。目前可以使用的一种命令是解锁命令(仅在锁屏中有效) -->
    <xs:element name="ExternCommand">
        <xs:complexType>
            <xs:attribute name="command" type="stringType" />
            <xs:attributeGroup ref="commandAttrs" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="numPara" type="numType" />
            <xs:attribute name="strPara" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 通过IntentCommand命令，可以跳转打开其他应用程序App；注意：要记得加上解锁命令，否则只是在后台打开了，还要解锁才能看到 -->
    <xs:element name="IntentCommand">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="Extra" />
            </xs:sequence>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="selectIntent" type="stringType" />
            <xs:attribute name="action" type="stringType" />
            <xs:attribute name="uri" type="stringType" />
            <xs:attribute name="type" type="stringType" />
            <xs:attribute name="category" type="stringType" />
            <xs:attribute name="package" type="stringType" />
            <xs:attribute name="class" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="deeplinks" type="stringType" />
            <xs:attribute name="hyperlink" type="stringType" />
            <xs:attribute name="isDesk" type="stringType" />
            <xs:attribute name="appID" type="stringType" />
            <xs:attribute name="sourceID" type="stringType" />
            <xs:attribute name="coOperWith" type="stringType" />
            <xs:attribute name="operType" type="stringType" />
            <xs:attribute name="market" type="stringType" />
            <xs:attribute name="broadcast" type="booleanType" />
            <xs:attribute name="flags" type="numType" />
            <xs:attributeGroup ref="commandAttrs" />
        </xs:complexType>
    </xs:element>
    <!-- 视频命令，用来控制视频播放暂停和音量 -->
    <xs:element name="VideoCommand">
        <xs:complexType>
            <xs:attribute name="name" type="stringType" />
            <xs:attribute name="src" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="play" type="booleanType" />
            <xs:attribute name="sound" default="-1" type="expression" />
            <xs:attribute name="keepCur" default="-1" type="expression" />
            <xs:attribute name="fold_expand_start" type="numType" />
            <xs:attribute name="fold_expand_end" type="numType" />
            <xs:attribute name="fold_collapse_big_start" type="numType" />
            <xs:attribute name="fold_collapse_big_end" type="numType" />
        </xs:complexType>
    </xs:element>
    <!-- 周期命令CycleCommand主要和元素数组Array配合使用，可以提升编码效率 -->
    <xs:element name="CycleCommand">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="VariableCommand" />
            </xs:sequence>
            <xs:attribute name="indexFlag" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attribute name="begin" type="numType" />
            <xs:attribute name="end" type="numType" />
            <xs:attribute name="frequency" type="numType" />
            <xs:attribute name="cycleCondition" type="expression" />
        </xs:complexType>
    </xs:element>
    <!-- 命令组 -->
    <xs:element name="GroupCommands">
        <xs:complexType>
            <xs:attribute name="target" type="stringType" />
            <xs:attribute name="method" default="perform" type="stringType" />
            <xs:attribute name="paramTypes" default="String" type="stringType" />
            <xs:attribute name="params" type="stringType" />
            <xs:attribute name="adid" type="stringType" />
        </xs:complexType>
    </xs:element>
    <!-- 虚拟屏幕元素组件 -->
    <xs:group name="virtualGroup">
        <xs:choice>
            <xs:element ref="Image" />
            <xs:element ref="Rectangle" />
            <xs:element ref="Circle" />
            <xs:element ref="Ellipse" />
            <xs:element ref="Line" />
            <xs:element ref="Arc" />
            <xs:element ref="Frame" />
            <xs:element ref="Text" />
            <xs:element ref="Time" />
            <xs:element ref="DateTime" />
            <xs:element ref="ImageNumber" />
            <xs:element ref="ImageChars" />
            <xs:element ref="Wallpaper" />
            <xs:element ref="Group" />
        </xs:choice>
    </xs:group>
    <!-- 组元素组件 -->
    <xs:group name="viewGroup">
        <xs:choice>
            <xs:element ref="Image" />
            <xs:element ref="Rectangle" />
            <xs:element ref="Circle" />
            <xs:element ref="Ellipse" />
            <xs:element ref="Line" />
            <xs:element ref="Arc" />
            <xs:element ref="Paint" />
            <xs:element ref="Frame" />
            <xs:element ref="SourceImage" />
            <xs:element ref="Text" />
            <xs:element ref="Time" />
            <xs:element ref="DateTime" />
            <xs:element ref="ImageNumber" />
            <xs:element ref="ImageChars" />
            <xs:element ref="Wallpaper" />
            <xs:element ref="Slider" />
            <xs:element ref="Unlocker" />
            <xs:element ref="Button" />
            <xs:element ref="Group" />
            <xs:element ref="PositionAnimation" />
            <xs:element ref="AlphaAnimation" />
            <xs:element ref="RotationAnimation" />
            <xs:element ref="Trigger" />
            <xs:element ref="Triggers" />
            <xs:element ref="Var" />
            <xs:element ref="List" />
        </xs:choice>
    </xs:group>
    <!-- 动画组 -->
    <xs:group name="animationGroup">
        <xs:choice>
            <xs:element ref="Mask" />
            <xs:element ref="Paint" />
            <xs:element ref="FillGradient" />
            <xs:element ref="StrokeGradient" />
            <xs:element ref="PositionAnimation" />
            <xs:element ref="AlphaAnimation" />
            <xs:element ref="SizeAnimation" />
            <xs:element ref="RotationAnimation" />
            <xs:element ref="SourcesAnimation" />
        </xs:choice>
    </xs:group>
    <!-- 滑动组件共有属性 -->
    <xs:attributeGroup name="sliderAttrs">
        <xs:attribute name="name" type="stringType" />
        <xs:attribute name="bounceInitSpeed" type="expression" />
        <xs:attribute name="bounceAcceleration" type="expression" />
        <xs:attribute name="visibility" type="expression" />
        <xs:attribute name="always" type="expression" />
        <xs:attribute name="alwaysShow" type="booleanType" />
        <xs:attribute name="keyPoint" type="stringType" />
    </xs:attributeGroup>
    <!-- 命令的共有属性 -->
    <xs:attributeGroup name="commandAttrs">
        <xs:attribute name="condition" type="expression" />
        <xs:attribute name="delay" type="numType" />
        <xs:attribute name="delayCondition" type="expression" />
    </xs:attributeGroup>
    <!-- 几何图形type  未定 -->
    <xs:attributeGroup name="geometryGroup">
        <xs:attributeGroup ref="viewCom" />
        <xs:attribute name="strokeColor" type="colorType" />
        <xs:attribute name="strokeAlign" type="stringType" />
        <xs:attribute name="fillColor" type="colorType" />
        <xs:attribute name="weight" type="expression" />
        <xs:attribute name="cap" type="stringType" />
        <xs:attribute name="dottedLine" type="stringType" />
        <xs:attribute name="hybridMode" type="stringType" />
    </xs:attributeGroup>
    <!-- 通用属性 expression支持表达式，类型暂不确定；moveRect:string类型（eg:"255,222,111,111"） -->
    <xs:attributeGroup name="viewCom">
        <xs:attribute name="name" type="stringType" />
        <xs:attribute name="_name" type="stringType" />
        <xs:attribute name="align" type="stringType" />
        <xs:attribute name="alignV" type="stringType" />
        <xs:attribute name="x" default="0" type="expression" />
        <xs:attribute name="y" default="0" type="expression" />
        <xs:attribute name="w" default="0" type="expression" />
        <xs:attribute name="h" default="0" type="expression" />
        <xs:attribute name="width" default="0" type="expression" />
        <xs:attribute name="height" default="0" type="expression" />
        <xs:attribute name="pivotX" default="0" type="expression" />
        <xs:attribute name="pivotY" default="0" type="expression" />
        <xs:attribute name="centerX" default="0" type="expression" />
        <xs:attribute name="centerY" default="0" type="expression" />
        <xs:attribute name="rotation" default="0" type="expression" />
        <xs:attribute name="rotationX" default="0" type="expression" />
        <xs:attribute name="rotationY" default="0" type="expression" />
        <xs:attribute name="angle" default="0" type="expression" />
        <xs:attribute name="angleX" default="0" type="expression" />
        <xs:attribute name="angleY" default="0" type="expression" />
        <xs:attribute name="alpha" default="255" type="expression" />
        <xs:attribute name="category" default="1" type="expression" />
        <xs:attribute name="status" default="1" type="expression" />
        <xs:attribute name="active" default="1" type="expression" />
        <xs:attribute name="visibility" default="1" type="expression" />
        <xs:attribute name="enableMove" default="0" type="expression" />
        <xs:attribute name="moveRect" type="stringType" />
        <xs:attribute name="pathname" type="stringType" />
        <xs:attribute name="translateX" default="0" type="expression" />
        <xs:attribute name="translateY" default="0" type="expression" />
        <xs:attribute name="scaleX" default="1" type="expression" />
        <xs:attribute name="scaleY" default="1" type="expression" />
        <xs:attribute name="rotate" default="0" type="expression" />
        <xs:attribute name="scale" default="1" type="expression" />
        <!-- <xs:anyAttribute processContents="lax" /> -->
    </xs:attributeGroup>
    <!-- pointType -->
    <xs:complexType name="pointType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="NormalState" />
            <xs:element ref="PressedState" />
            <xs:element ref="ReachedState" />
            <xs:element ref="Path" />
            <xs:element ref="Trigger" />
            <xs:element ref="Triggers" />
            <xs:element ref="Intent" />
        </xs:choice>
        <xs:attribute name="x" type="expression" />
        <xs:attribute name="y" type="expression" />
        <xs:attribute name="w" type="expression" />
        <xs:attribute name="h" type="expression" />
        <xs:attribute name="normalSound" type="stringType" />
        <xs:attribute name="pressedSound" type="stringType" />
        <xs:attribute name="reachedSound" type="stringType" />
    </xs:complexType>
    <!-- 控件状态type -->
    <xs:complexType name="stateType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="Image" />
            <xs:element ref="Frame" />
            <xs:element ref="SourceImage" />
            <xs:element ref="Text" />
            <xs:element ref="Time" />
            <xs:element ref="DateTime" />
            <xs:element ref="ImageNumber" />
            <xs:element ref="ImageChars" />
            <xs:element ref="Group" />
            <xs:element ref="Trigger" />
            <xs:element ref="Triggers" />
        </xs:choice>
    </xs:complexType>
    <!-- 旋转动画type -->
    <xs:complexType name="rotationType">
        <xs:attribute name="angle" type="stringType" />
        <xs:attribute name="time" type="xs:long" />
        <xs:attribute name="easeType" type="stringType" />
    </xs:complexType>
    <!-- 文本type -->
    <xs:complexType name="textType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:group ref="animationGroup" />
            <xs:element ref="PathItem" />
        </xs:choice>
        <xs:attributeGroup ref="viewCom" />
        <xs:attribute name="size" type="expression" />
        <xs:attribute name="color" type="colorType" />
        <xs:attribute name="bold" type="booleanType" />
        <xs:attribute name="shadowColor" type="colorType" />
        <xs:attribute name="shadowDx" type="numType" />
        <xs:attribute name="shadowDy" type="numType" />
        <xs:attribute name="Radius" type="numType" />
        <xs:attribute name="marquee" type="booleanType" />
        <xs:attribute name="showTime" type="expression" />
        <xs:attribute name="showStyle" default="0" type="expression" />
        <xs:attribute name="tileMode" type="stringType" />
        <xs:attribute name="marqueeColor" type="colorType" />
        <xs:attribute name="marqueeSpeed" type="numType" />
        <xs:attribute name="spaceTimes" default="1" type="numType" />
        <xs:attribute name="spaceExtraAdd" default="0" type="numType" />
        <xs:attribute name="canPath" type="booleanType" />
        <xs:attribute name="run" type="expression" />
        <xs:attribute name="speed" type="expression" />
        <xs:attribute name="autoLineFeed" type="booleanType" />
        <xs:attribute name="format" type="stringType" />
        <xs:attribute name="paras" type="stringType" />
        <xs:attribute name="text" type="stringType" />
        <xs:attribute name="textExp" type="stringType" />
        <xs:attribute name="textalign" type="stringType" />
        <xs:attribute name="scrollDisplay" type="booleanType" />
        <xs:attribute name="marqueeRepeatLimit" type="numType" />
        <xs:attribute name="clickable" type="booleanType" />
        <xs:attribute name="delayTime" default="3000" type="numType" />
        <xs:attribute name="fontPath" type="stringType" />
        <xs:attribute name="fontFamily" type="stringType" />
    </xs:complexType>
    <!-- 图片type -->
    <xs:complexType name="imageType">
        <xs:group maxOccurs="unbounded" minOccurs="0" ref="animationGroup" />
        <xs:attributeGroup ref="viewCom" />
        <xs:attribute name="blur" type="numType" />
        <xs:attribute name="src" type="stringType" />
        <xs:attribute name="xfermode" type="stringType" />
        <xs:attribute name="adSrc" type="stringType" />
        <xs:attribute name="srcExp" type="expression" />
        <xs:attribute name="srcid" type="expression" />
        <xs:attribute name="useVirtualScreen" type="booleanType" />
        <xs:attribute name="loop" type="stringType" />
        <xs:attribute name="save" type="numType" />
        <xs:attribute name="scaleType" type="stringType" />
        <xs:attribute name="isBackground" type="booleanType" />
        <xs:attribute name="isRefresh" type="stringType" />
        <xs:attribute name="longPressContinued" type="stringType" />
        <xs:attribute name="isPlayingVar" type="stringType" />
        <xs:attribute name="srcType" type="stringType" />
        <xs:attribute name="tint" type="colorType" />
        <xs:attribute name="tintmode" type="numType" />
        <xs:attribute name="cornerRadius" type="numType" />
        <xs:attribute name="cornerRadiusExp" type="expression" />
        <xs:attribute name="loadAsync" type="booleanType" />
        <xs:attribute name="antiAlias" type="booleanType" />
        <xs:attribute name="srcFormat" type="expression" />
        <xs:attribute name="srcForamtExp" type="expression" />
        <xs:attribute name="srcParas" type="expression" />
    </xs:complexType>
    <!-- 按钮type -->
    <xs:complexType name="buttonType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <!-- <xs:element ref="Triggers" />
            <xs:element ref="Trigger" /> -->
            <xs:element ref="Normal" />
            <xs:element ref="Pressed" />
            <xs:group maxOccurs="unbounded" minOccurs="0" ref="viewGroup" />
        </xs:choice>
        <xs:attribute name="name" type="stringType" />
        <xs:attribute name="x" type="expression" />
        <xs:attribute name="y" type="expression" />
        <xs:attribute name="w" type="expression" />
        <xs:attribute name="h" type="expression" />
        <xs:attribute name="interceptTouch" type="booleanType" />
        <xs:attribute name="haptic" type="booleanType" />
        <xs:attribute name="visibility" type="expression" />
        <xs:attribute name="longTouchTime" type="expression" />
        <xs:attribute name="alignChildren" type="booleanType" />
    </xs:complexType>
    <!-- 函数类型 -->
    <xs:simpleType name="easeAttr">
        <xs:restriction base="stringType">
            <xs:enumeration value="SineEaseIn" />
            <xs:enumeration value="SineEaseOut" />
            <xs:enumeration value="SineEaseInOut" />
            <xs:enumeration value="QuadEaseIn" />
            <xs:enumeration value="QuadEaseOut" />
            <xs:enumeration value="QuadEaseInOut" />
            <xs:enumeration value="CubicEaseIn" />
            <xs:enumeration value="CubicEaseOut" />
            <xs:enumeration value="CubicEaseInOut" />
            <xs:enumeration value="QuartEaseIn" />
            <xs:enumeration value="QuartEaseOut" />
            <xs:enumeration value="QuartEaseInOut" />
            <xs:enumeration value="QuintEaseIn" />
            <xs:enumeration value="QuintEaseOut" />
            <xs:enumeration value="QuintEaseInOut" />
            <xs:enumeration value="ExpoEaseIn" />
            <xs:enumeration value="ExpoEaseOut" />
            <xs:enumeration value="ExpoEaseInOut" />
            <xs:enumeration value="CircEaseIn" />
            <xs:enumeration value="CircEaseOut" />
            <xs:enumeration value="CircEaseInOut" />
            <xs:enumeration value="BackEaseIn" />
            <xs:enumeration value="BackEaseOut" />
            <xs:enumeration value="BackEaseInOut" />
            <xs:enumeration value="ElasticEaseIn" />
            <xs:enumeration value="ElasticEaseOut" />
            <xs:enumeration value="ElasticEaseInOut" />
            <xs:enumeration value="BounceEaseIn" />
            <xs:enumeration value="BounceEaseOut" />
            <xs:enumeration value="BounceEaseInOut" />
        </xs:restriction>
    </xs:simpleType>
    <!-- 表达式 未定 -->
    <xs:simpleType name="expression">
        <xs:restriction base="stringType" />
    </xs:simpleType>
    <!-- 字符串 -->
    <xs:simpleType name="stringType">
        <xs:restriction base="xs:string">
            <xs:pattern value="([^>])+" />
        </xs:restriction>
    </xs:simpleType>
    <!-- 颜色限定 未定 -->
    <xs:simpleType name="colorType">
        <xs:restriction base="stringType" />
    </xs:simpleType>
    <!-- 数字 -->
    <xs:simpleType name="numType">
        <xs:restriction base="stringType" />
    </xs:simpleType>
    <!-- boolean:true或false -->
    <xs:simpleType name="booleanType">
        <xs:restriction base="stringType">
            <xs:enumeration value="true" />
            <xs:enumeration value="false" />
        </xs:restriction>
    </xs:simpleType>
    <!-- 音乐控制器 -->
    <xs:element name="MediaControl">
        <xs:complexType>
            <xs:attribute name="packageName" type="stringType" />
        </xs:complexType>
    </xs:element>

    <!-- 音乐控制命令 -->
    <xs:element name="MediaCommand">
        <xs:complexType>
            <xs:attribute name="command" type="mediaCommandType" />
            <xs:attribute name="voiceStep100" type="expression" />
            <xs:attribute name="adid" type="stringType" />
            <xs:attributeGroup ref="commandAttrs" />
        </xs:complexType>
    </xs:element>

    <!-- 音乐控制命令类型 -->
    <xs:simpleType name="mediaCommandType">
        <xs:restriction base="stringType">
            <xs:enumeration value="mediaPlay" />
            <xs:enumeration value="mediaPause" />
            <xs:enumeration value="mediaLike" />
            <xs:enumeration value="mediaDislike" />
            <xs:enumeration value="skipToPrevious" />
            <xs:enumeration value="skipToNext" />
            <xs:enumeration value="addVoice" />
            <xs:enumeration value="subVoice" />
            <xs:enumeration value="mediaRepeatMode" />
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
